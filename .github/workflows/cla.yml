name: "CLA Assistant"
on:
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, closed, synchronize]

# explicitly configure permissions, in case your GITHUB_TOKEN workflow permissions are set to read-only in repository settings
permissions:
  actions: write
  contents: write # this can be 'read' if the signatures are in remote repository
  pull-requests: write
  statuses: write

jobs:
  CLAAssistant:
    if: >
      (github.event.comment.body == 'recheck' ||
       github.event.comment.body == 'I have read the CLA Document and I hereby sign the CLA') ||
       github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Download CLA document
        id: get-cla
        run: |
          curl -sSLo cla.txt https://raw.githubusercontent.com/prj-beatrice/beatrice-vst/main/CLA.txt
          cat cla.txt
          {
            echo "document<<EOF"
            cat cla.txt
            echo ""
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: "CLA Assistant"
        uses: contributor-assistant/github-action@v2.6.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # the below token should have repo scope and must be manually added by you in the repository's secret
          # This token is required only if you have configured to store the signatures in a remote repository/organization
          # PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          path-to-signatures: "signatures/cla.json"
          path-to-document: "https://github.com/prj-beatrice/beatrice-vst/blob/main/CLA.txt" # e.g. a CLA or a DCO document
          # branch should not be protected
          branch: "signatures"
          allowlist: prj-beatrice

          custom-notsigned-prcomment: |
            Thank you for your submission, we really appreciate it. Like many open-source projects, we ask that $you sign our [Contributor License Agreement](${input.getPathToDocument()}) before we can accept your contribution.

            **Here is the full text of our CLA:**
            ```
            ${{ steps.get-cla.outputs.document }}
            ```

            You can sign the CLA by simply posting a Pull Request comment using the following format.

          # the followings are the optional inputs - If the optional inputs are not given, then default values will be taken
          #remote-organization-name: enter the remote organization name where the signatures should be stored (Default is storing the signatures in the same repository)
          #remote-repository-name: enter the  remote repository name where the signatures should be stored (Default is storing the signatures in the same repository)
          #create-file-commit-message: 'For example: Creating file for storing CLA Signatures'
          #signed-commit-message: 'For example: $contributorName has signed the CLA in $owner/$repo#$pullRequestNo'
          #custom-notsigned-prcomment: 'pull request comment with Introductory message to ask new contributors to sign'
          #custom-pr-sign-comment: 'The signature to be committed in order to sign the CLA'
          #custom-allsigned-prcomment: 'pull request comment when all contributors has signed, defaults to **CLA Assistant Lite bot** All Contributors have signed the CLA.'
          #lock-pullrequest-aftermerge: false - if you don't want this bot to automatically lock the pull request after merging (default - true)
          #use-dco-flag: true - If you are using DCO instead of CLA
